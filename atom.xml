<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>X-0524</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-24T07:34:30.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>X-0524</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VUE知识点</title>
    <link href="http://yoursite.com/2018/05/24/two/"/>
    <id>http://yoursite.com/2018/05/24/two/</id>
    <published>2018-05-24T07:10:27.000Z</published>
    <updated>2018-05-24T07:34:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、什么是vue："><a href="#1、什么是vue：" class="headerlink" title="1、什么是vue："></a>1、什么是vue：</h4><pre><code>vue是一个小巧、容易上手的mvvm框架，和angular类似 vue结构为：一片html代码配合json，再new一个vue实例</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">html:</span><br><span class="line">   &lt;div id=<span class="string">'box'</span>&gt;</span><br><span class="line">       &#123;&#123;text&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">script:</span><br><span class="line">   var c = new Vue(&#123;</span><br><span class="line">       el:<span class="string">'#box'</span>,    //选择器 id、class、tagName</span><br><span class="line">        data：&#123;</span><br><span class="line">           text:<span class="string">'hello vue'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">前端框架：</span><br><span class="line">1. mvc【react】model + view + control</span><br><span class="line"></span><br><span class="line">2. mvvm【angular、vue】model + view + viewmodel</span><br><span class="line"></span><br><span class="line">MVVM的优点：</span><br><span class="line">低耦合：View可以独立于Model变化和修改，同一个ViewModel可以被多个View复用；并且可以做到View和Model的变化互不影响；</span><br><span class="line"></span><br><span class="line">可重用性：可以把一些视图的逻辑放在ViewModel，让多个View复用；</span><br><span class="line"></span><br><span class="line">独立开发：开发人员可以专注与业务逻辑和数据的开发 </span><br><span class="line">ViewModemvvm设计人员可以专注于UI(View)的设计；</span><br><span class="line"></span><br><span class="line">可测试性：清晰的View分层，使得针对表现层业务逻辑的测试更容易，更简单。</span><br></pre></td></tr></table></figure><h4 id="2、vue的特点："><a href="#2、vue的特点：" class="headerlink" title="2、vue的特点："></a>2、vue的特点：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不兼容低版本IE、轻（拆分成了很多模块，让用户自己选择需要的功能  vue-router、vuex、vue-resource、vue-server-renderer）、github活跃、作者是中国人所以文档对于中国程序猿更友好、渲染快</span><br><span class="line">!)</span><br><span class="line"> 可以看到angular每秒只能进行100次左右的操作，React大概在1000-2000之间，Vue在10K以上，这是因为Vue每次赋值，都直接触发了数据项的对比然后直接更新绑定DOM元素的内部文本，而不是关联模板（angular）、也没有对比虚拟DOM节点差异（react）</span><br></pre></td></tr></table></figure><h4 id="3、常用指令：【扩展html标签功能、属性】"><a href="#3、常用指令：【扩展html标签功能、属性】" class="headerlink" title="3、常用指令：【扩展html标签功能、属性】"></a>3、常用指令：【扩展html标签功能、属性】</h4><p>   a) v-model (双向数据绑定) 一般表单元素（input）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">b) v-for (循环)</span><br><span class="line">   [1.*版本]：</span><br><span class="line">            v-for=<span class="string">'item in items'</span></span><br><span class="line">            &#123;&#123;item&#125;&#125;</span><br><span class="line"></span><br><span class="line">              v-for=<span class="string">'(k,v) in items'</span></span><br><span class="line">              &#123;&#123;k&#125;&#125; &#123;&#123;v&#125;&#125;</span><br><span class="line">      另外还有：&#123;&#123;<span class="variable">$index</span>&#125;&#125; &#123;&#123;<span class="variable">$key</span>&#125;&#125;可用</span><br><span class="line"></span><br><span class="line">    [2.*版本]：</span><br><span class="line">             v-for=<span class="string">'(v,k) in items'</span></span><br><span class="line">               &#123;&#123;v&#125;&#125; &#123;&#123;k&#125;&#125;</span><br><span class="line"></span><br><span class="line">          注意：v、k的顺序改变</span><br><span class="line">            去除了&#123;&#123;<span class="variable">$index</span>&#125;&#125; &#123;&#123;<span class="variable">$key</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">c) v-show (显示/隐藏)</span><br><span class="line">          v-show=<span class="string">'布尔值'</span></span><br><span class="line">d) v-if (是否渲染)</span><br><span class="line">          v-if=<span class="string">'布尔'</span></span><br></pre></td></tr></table></figure></p><h4 id="4、常用事件：-v-on"><a href="#4、常用事件：-v-on" class="headerlink" title="4、常用事件：(v-on:* / @*)"></a>4、常用事件：(v-on:* / @*)</h4><p>   a)鼠标类事件【click/mouseout/mouseover/dbclick/mousedown/contextmenu/..】</p><pre><code>1. 用法：v-on:click/@click=&apos;函数&apos;</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   2. 对象：<span class="variable">$event</span></span><br><span class="line"></span><br><span class="line">原生js：</span><br><span class="line">      document.getElementById(<span class="string">'password'</span>).click=<span class="keyword">function</span>(e)&#123;</span><br><span class="line">            event = e||window.event</span><br><span class="line">        &#125;</span><br><span class="line">vue.js:</span><br><span class="line">      @click=<span class="string">'mymethod($event)'</span></span><br><span class="line"></span><br><span class="line">        methods:&#123;</span><br><span class="line">           mymethod:<span class="keyword">function</span>(e)&#123;</span><br><span class="line">               ...</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><pre><code>3. 阻止冒泡：         a) e.cancelBubble = true;            b) @click.stop  ☆推荐4. 阻止默认行为：         a) e.preventDefault();            b) @contextmenu.prevent ☆推荐</code></pre><p>   b)键盘类事件【keydown/keyup】<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1. 用法：v-on:keydown/@keydown=<span class="string">'函数'</span></span><br><span class="line"></span><br><span class="line">2. 对象：同鼠标类事件</span><br><span class="line"></span><br><span class="line">3. 获取键入码：</span><br><span class="line">   mymothod:<span class="keyword">function</span>(e)&#123;</span><br><span class="line">            e.keyCode</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">4.常用键：</span><br><span class="line">         【exemple】判断按下的键是回车：</span><br><span class="line">              a)</span><br><span class="line">                 @keydown=<span class="string">'mymethod($event)'</span></span><br><span class="line"></span><br><span class="line">                 mymethod:<span class="keyword">function</span>(e)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(e.keyCode == 13) console.log(<span class="string">'你按下了回车'</span>)</span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">              b)</span><br><span class="line">                 keydown.13=<span class="string">'enterfunc'</span></span><br><span class="line"></span><br><span class="line">                 enterfunc:<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">                    console.log(<span class="string">'你按下了回车'</span>)</span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">              c)</span><br><span class="line">                 keydown.enter=<span class="string">'enterfunc'</span></span><br><span class="line">          【补充】:</span><br><span class="line">                @keyup/down.left</span><br><span class="line">                  @keyup/down.right</span><br><span class="line">                  @keyup/down.up</span><br><span class="line">                  @keyup/down.down</span><br><span class="line">                  ....</span><br></pre></td></tr></table></figure></p><h4 id="5、常用属性：-v-bind"><a href="#5、常用属性：-v-bind" class="headerlink" title="5、常用属性：(v-bind:* / :*)"></a>5、常用属性：(v-bind:* / :*)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">a)class和style:</span><br><span class="line">    1. :class=<span class="string">''</span>      v-bind:class=<span class="string">''</span></span><br><span class="line">       :style=<span class="string">''</span>      v-bind:style=<span class="string">''</span></span><br><span class="line">    2.</span><br><span class="line">       :class=<span class="string">'[active, bluebg]'</span></span><br><span class="line">      </span><br><span class="line">       :class=<span class="string">'&#123;active:isActive, bluebg:isBlue&#125;'</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            isActive: <span class="literal">true</span>,</span><br><span class="line">            isBlue: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    3.</span><br><span class="line">       :class=<span class="string">'json'</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            json:&#123;active:isActive, bluebg:<span class="literal">false</span>&#125;,</span><br><span class="line">            isActive:<span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">     4.</span><br><span class="line">     :class=<span class="string">'[isActive ? active : "", bluebg]'</span></span><br><span class="line">       :class=<span class="string">'[&#123; active: isActive &#125;, bluebg]'</span></span><br><span class="line">     5.</span><br><span class="line">     :style=<span class="string">"&#123;'margin-left':mleft, fontSize: ftSize + 'rem'&#125;"</span></span><br><span class="line">       data:&#123;</span><br><span class="line">        mleft:<span class="string">'20px'</span>,</span><br><span class="line">           ftSize:<span class="string">'16'</span></span><br><span class="line">       &#125;</span><br><span class="line">b)其他属性:【width、height、src、<span class="built_in">disable</span>、自定义属性、...】</span><br><span class="line">       v-bind:src=<span class="string">'url_data'</span>            :src=<span class="string">'url_data'</span></span><br><span class="line"></span><br><span class="line">        &lt;img src=<span class="string">'&#123;&#123;url_data&#125;&#125;'</span>&gt;        //数据能读出来，但是会报错</span><br><span class="line">        &lt;img :src=<span class="string">'url_data'</span>&gt;         //数据能读出来，且不会报错</span><br></pre></td></tr></table></figure><h4 id="6、模板："><a href="#6、模板：" class="headerlink" title="6、模板："></a>6、模板：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;text&#125;&#125;               //数据更新则模板发生变化</span><br><span class="line"></span><br><span class="line">   &#123;&#123;*text&#125;&#125;              //数据只绑定一次（初始值）</span><br><span class="line"></span><br><span class="line">   &#123;&#123;&#123;text&#125;&#125;&#125;            //HTML转义输出</span><br></pre></td></tr></table></figure><h4 id="7、过滤器："><a href="#7、过滤器：" class="headerlink" title="7、过滤器："></a>7、过滤器：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a) 过滤器用法：</span><br><span class="line">    &#123;&#123;text| filterA&#125;&#125;</span><br><span class="line">     &#123;&#123;text| filterA | filterB&#125;&#125;</span><br><span class="line"> b) 示例：</span><br><span class="line">    &#123;&#123;text| capitalize&#125;&#125;</span><br><span class="line"></span><br><span class="line">     filters: &#123;</span><br><span class="line">       capitalize: <span class="keyword">function</span> (value) &#123;</span><br><span class="line">         <span class="keyword">if</span> (!value) <span class="built_in">return</span> <span class="string">''</span></span><br><span class="line">         value = value.toString()</span><br><span class="line">         <span class="built_in">return</span> value.charAt(0).toUpperCase() + value.slice(1)</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">   1.\*版本中vue是自带系统默认的很多过滤器的，虽然不知道为什么，但是作者在2.*版本中全部取消了，让用户自己写filter，下面给出曾经自带的系统默认的过滤器，如果自己写，应该怎么写：</span><br><span class="line"></span><br><span class="line">   1. uppercase</span><br><span class="line">      text.toUpperCase()</span><br><span class="line">   2. lowercase</span><br><span class="line">      text.toLowerCase()</span><br><span class="line">   3. pluralize</span><br><span class="line">      filters: &#123;</span><br><span class="line">           pluralize: <span class="keyword">function</span> (value, sotval) &#123;</span><br><span class="line">               <span class="keyword">if</span>(sotval)&#123;</span><br><span class="line">                 <span class="keyword">if</span> (value === 0) &#123;</span><br><span class="line">                   <span class="built_in">return</span> <span class="string">'no'</span> + sotval;</span><br><span class="line">                 &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === 1) &#123;</span><br><span class="line">                   <span class="built_in">return</span> <span class="string">'1'</span> + sotval</span><br><span class="line">                 &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="built_in">return</span> value + sotval + <span class="string">'s'</span></span><br><span class="line">                 &#125;</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   <span class="built_in">return</span> value</span><br><span class="line">              &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   4. currency</span><br><span class="line">      filters: &#123;</span><br><span class="line">          currency: <span class="keyword">function</span> (price, money) &#123;</span><br><span class="line">            <span class="keyword">if</span>(money)&#123;</span><br><span class="line">               money + price.toFixed(2)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="string">'$'</span> + price.toFixed(2)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">```        </span><br><span class="line"><span class="comment">#### 8、交互（vue-resouce）</span></span><br><span class="line">   【引入vue-resouce后，会扩充vue实例对象，vue对象下挂一个<span class="variable">$http</span>对象】</span><br><span class="line">```bash</span><br><span class="line">   a)get:</span><br><span class="line">       //获取一个普通的文本数据</span><br><span class="line">        this.<span class="variable">$http</span>.get(<span class="string">'a.txt'</span>).<span class="keyword">then</span>(<span class="keyword">function</span>(res)&#123;</span><br><span class="line">           console.log(<span class="string">'success'</span>);</span><br><span class="line">            this.data = res.data;</span><br><span class="line">        &#125;,<span class="keyword">function</span>(res)&#123;</span><br><span class="line">           console.log(<span class="string">'faild'</span>);</span><br><span class="line">            console.log(res.status);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1、什么是vue：&quot;&gt;&lt;a href=&quot;#1、什么是vue：&quot; class=&quot;headerlink&quot; title=&quot;1、什么是vue：&quot;&gt;&lt;/a&gt;1、什么是vue：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;vue是一个小巧、容易上手的mvvm框架，和angular类似
 v
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/05/22/hello-world/"/>
    <id>http://yoursite.com/2018/05/22/hello-world/</id>
    <published>2018-05-22T07:57:28.000Z</published>
    <updated>2018-05-22T07:57:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第一篇文章：hexo教程，快速搭建一个你自己的博客.</title>
    <link href="http://yoursite.com/2018/05/16/one/"/>
    <id>http://yoursite.com/2018/05/16/one/</id>
    <published>2018-05-16T09:51:34.000Z</published>
    <updated>2018-05-22T09:07:46.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">安装node.js(必须安装)</span><br><span class="line">node.js下载 </span><br><span class="line">注意：检查是否成功安装 npm 检测方法 npm -v</span><br></pre></td></tr></table></figure><h3 id="申请Github账号"><a href="#申请Github账号" class="headerlink" title="申请Github账号"></a>申请Github账号</h3><p>####<a href="https://github.com" target="_blank" rel="noopener">GIT网址</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">点击进入到官网，注册申请账号</span><br><span class="line">创建博客仓库</span><br><span class="line">注意：仓库名应该为：github用户名.github.io。</span><br></pre></td></tr></table></figure></p><h3 id="下载git，并生成ssh"><a href="#下载git，并生成ssh" class="headerlink" title="下载git，并生成ssh"></a>下载git，并生成ssh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">下载地址https://git-scm.com/，下载完成后</span><br><span class="line">鼠标的右键会出现Git Bash Here点击出现一个命令窗口，</span><br><span class="line">我们创建的git仓库采用ssh加密的方式。</span><br><span class="line">我们首先在本地生成ssh，</span><br><span class="line">    打开Git Bash Here命令行设置user.name。user.email</span><br><span class="line">    git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">    git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br><span class="line"></span><br><span class="line">在命令行里面输入</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br><span class="line"></span><br><span class="line">接下来按回车正常的一步一步向下走，最终出现</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):   &lt;==密钥文件默认存放位置，按Enter即可</span><br><span class="line">Created directory <span class="string">'/root/.ssh'</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):     &lt;== 输入密钥锁码，或直接按 Enter 留空</span><br><span class="line">Enter same passphrase again:     &lt;== 再输入一遍密钥锁码</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.    &lt;== 生成的私钥</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.    &lt;== 生成的公钥</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:K1qy928tkk1FUuzQtlZK+poeS67vIgPvHw9lQ+KNuZ4 root@localhost.localdomain</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|           +.    |</span></span><br><span class="line"><span class="string">|          o * .  |</span></span><br><span class="line"><span class="string">|        . .O +   |</span></span><br><span class="line"><span class="string">|       . *. *    |</span></span><br><span class="line"><span class="string">|        S =+     |</span></span><br><span class="line"><span class="string">|    .    =...    |</span></span><br><span class="line"><span class="string">|    .oo =+o+     |</span></span><br><span class="line"><span class="string">|     ==o+B*o.    |</span></span><br><span class="line"><span class="string">|    oo.=EXO.     |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">到这一步的时候，ssh秘钥已经生成好了。一般路径会在~.ssh/ 这个下面</span></span><br><span class="line"><span class="string">id_rsa.pub这个是公钥需要copy里面的内容,把它放到git网址上</span></span><br><span class="line"><span class="string">（https://github.com/settings/keys）打开网址后New SSH key</span></span><br><span class="line"><span class="string">粘贴你刚刚copy的内容，这样就好了就是这么简单。</span></span><br></pre></td></tr></table></figure><h3 id="接下来我们进行hexo的安装"><a href="#接下来我们进行hexo的安装" class="headerlink" title="接下来我们进行hexo的安装"></a>接下来我们进行hexo的安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">安装hexo</span><br><span class="line">npm install hexo-cli g</span><br><span class="line">npm install hexo -g</span><br><span class="line">初始化博客文件夹</span><br><span class="line">hexo init blog</span><br><span class="line">切换到该路径</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">安装hexo的扩展插件</span><br><span class="line">npm install</span><br><span class="line">安装其它插件</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line"></span><br><span class="line">安装完之后进入你的blog的_config.yml文件修改：</span><br><span class="line"><span class="built_in">type</span>写成git</span><br><span class="line">repo为你自己项目的git地址</span><br><span class="line">branch写成master</span><br><span class="line">deploy:</span><br><span class="line">   <span class="built_in">type</span>: git </span><br><span class="line">   repo: git@github.com:xiaoxiangxiao/xiaoxiangxiao.github.io.git</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>####最后进行部署你的博客<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">清缓存</span><br><span class="line">hexo clean</span><br><span class="line">生成静态页</span><br><span class="line">hexo g</span><br><span class="line">部署上去</span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line">运行完之后访问你的地址就行了！</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
  </entry>
  
</feed>
